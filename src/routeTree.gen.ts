/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DiscoverImport } from './routes/discover'
import { Route as AnimeSlugImport } from './routes/anime.$slug'
import { Route as AnimeSlugEpisodeIdImport } from './routes/anime_.$slug.$episodeId'

// Create Virtual Routes

const WatchlistLazyImport = createFileRoute('/watchlist')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WatchlistLazyRoute = WatchlistLazyImport.update({
  path: '/watchlist',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/watchlist.lazy').then((d) => d.Route))

const DiscoverRoute = DiscoverImport.update({
  path: '/discover',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AnimeSlugRoute = AnimeSlugImport.update({
  path: '/anime/$slug',
  getParentRoute: () => rootRoute,
} as any)

const AnimeSlugEpisodeIdRoute = AnimeSlugEpisodeIdImport.update({
  path: '/anime/$slug/$episodeId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/discover': {
      id: '/discover'
      path: '/discover'
      fullPath: '/discover'
      preLoaderRoute: typeof DiscoverImport
      parentRoute: typeof rootRoute
    }
    '/watchlist': {
      id: '/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof WatchlistLazyImport
      parentRoute: typeof rootRoute
    }
    '/anime/$slug': {
      id: '/anime/$slug'
      path: '/anime/$slug'
      fullPath: '/anime/$slug'
      preLoaderRoute: typeof AnimeSlugImport
      parentRoute: typeof rootRoute
    }
    '/anime/$slug/$episodeId': {
      id: '/anime/$slug/$episodeId'
      path: '/anime/$slug/$episodeId'
      fullPath: '/anime/$slug/$episodeId'
      preLoaderRoute: typeof AnimeSlugEpisodeIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  DiscoverRoute,
  WatchlistLazyRoute,
  AnimeSlugRoute,
  AnimeSlugEpisodeIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/discover",
        "/watchlist",
        "/anime/$slug",
        "/anime/$slug/$episodeId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/discover": {
      "filePath": "discover.tsx"
    },
    "/watchlist": {
      "filePath": "watchlist.lazy.tsx"
    },
    "/anime/$slug": {
      "filePath": "anime.$slug.tsx"
    },
    "/anime/$slug/$episodeId": {
      "filePath": "anime_.$slug.$episodeId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
